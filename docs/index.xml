<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Reversing Stories</title>
    
    
    
    <link>/</link>
    <description>Recent content on Reversing Stories</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 24 May 2022 13:14:20 +0700</lastBuildDate>
    
	<atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Reversing Stories - MalwareTech Challenge #4 Write-Ups</title>
      <link>/posts/malwaretech-chal4/</link>
      <pubDate>Tue, 24 May 2022 13:14:20 +0700</pubDate>
      
      <guid>/posts/malwaretech-chal4/</guid>
      <description>
        
          
          
          
        
        
        
          [ Shellcode ]#Shellcode1#Hello friend, in this challenge we are given a PE file named shellcode1.exe_ .
Description of this challenge:
 shellcode1.exe contains a flag stored within the executable. When run, the program will output an MD5 hash of the flag but not the original. Can you extract the flag?
 Rules &amp;amp; Information:
  You are not require to run shellcode1.exe, this challenge is static analysis only.
          
        
        </description>
    </item>
    
    <item>
      <title>Reversing Stories - MalwareTech Challenge #3 Write-Ups</title>
      <link>/posts/malwaretech-chal3/</link>
      <pubDate>Tue, 17 May 2022 11:11:05 +0700</pubDate>
      
      <guid>/posts/malwaretech-chal3/</guid>
      <description>
        
          
          
          
        
        
        
          [Hide and Seek]#Strings3#Still with the MalwareTech Windows reversing challenge, now we are given a PE file named strings3.exe_.
Also still with the same rules as the previous 2 (this and this), this challenge is static analysis only.
The description:
 strings3.exe contains an un-encrypted flag stored within the executable. When run, the program will output an MD5 hash of the flag but not the original.
          
        
        </description>
    </item>
    
    <item>
      <title>Reversing Stories - MalwareTech Challenge #2 Write-Ups</title>
      <link>/posts/malwaretech-chal2/</link>
      <pubDate>Sun, 15 May 2022 00:52:50 +0700</pubDate>
      
      <guid>/posts/malwaretech-chal2/</guid>
      <description>
        
          
          
          
        
        
        
          [Hide and Seek]#Strings#Hello friend, back again with the MalwareTech Windows reversing challenge, now we are given a PE file named strings2.exe_.
Same as the previous challenge, we can only use static analysis to solve this challenge.
The description of this challenge:
 strings2.exe contains an un-encrypted flag stored within the executable. When run, the program will output an MD5 hash of the flag but not the original.
          
        
        </description>
    </item>
    
    <item>
      <title>Reversing Stories - MalwareTech Challenge #1 Write-Ups</title>
      <link>/posts/malwaretech-chal1/</link>
      <pubDate>Fri, 13 May 2022 15:50:24 +0700</pubDate>
      
      <guid>/posts/malwaretech-chal1/</guid>
      <description>
        
          
          
          
        
        
        
          [Hide and Seek]#Strings#Hello friend, in this challenge we are given a PE file named strings1.exe_ . The rule of this challenge is that we can only use static analysis to solve it, that&amp;rsquo;s why there is &amp;ldquo;_&amp;rdquo; at the end of the PE file name, which is to prevent us from accidentally running it.
The description of this challenge:
 strings1.exe contains an un-encrypted flag stored within the executable.
          
        
        </description>
    </item>
    
    <item>
      <title>About</title>
      <link>/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/about/</guid>
      <description>
        
          
          
          
        
        
        
          Hi, i&amp;rsquo;m Irfan Alditya.
A software reverse engineering hobbyist.
Find me on twitter @aldityairfan
          
        
        </description>
    </item>
    
  </channel>
</rss>